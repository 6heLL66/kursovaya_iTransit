{"version":3,"sources":["hooks/useRequest.hook.js","SignUpPage/SignUpPage.js","shared/auth.js","SignInPage/SignInPage.js","CollectionPage/Item.js","CollectionPage/ItemsContainer.js","HomePage/LastItems.js","CollectionsPage/Collection.js","CollectionsPage/CollectionsContainer.js","HomePage/BiggestCollections.js","HomePage/HomePage.js","AdminPage/User.js","AdminPage/UsersTable.js","AdminPage/ControlPanel.js","AdminPage/AdminPage.js","shared/Header.js","CollectionsPage/CreateCollectionModal.js","CollectionsPage/ControlPanel.js","CollectionsPage/CollectionsPage.js","CollectionPage/ItemCreateModal.js","CollectionPage/ChangeFieldsModal.js","CollectionPage/Info.js","CollectionPage/CollectionPage.js","ItemPage/Info.js","ItemPage/ItemFields.js","ItemPage/Comment.js","ItemPage/Comments.js","ItemPage/ItemPage.js","Search/SearchPage.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["useRequest","useState","loading","setLoading","error","setError","success","setSuccess","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","languages","require","SignUpPage","email","setEmail","username","setUsername","password","setPassword","lang","useSelector","state","language","theme","e","preventDefault","role","Container","className","Col","lg","span","offset","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","enterName","Row","style","color","marginLeft","Button","variant","onClick","disabled","signUp","Nav","Link","href","padding","marginTop","signIn","auth","token","dispatch","res","console","log","payload","id","user","_id","localStorage","getItem","SignInPage","useDispatch","login","setItem","useEffect","window","VK","Widgets","Auth","onAuth","clientId","redirectUri","onSuccess","profileObj","cookiePolicy","Item","item","size","xl","md","sm","xs","Card","width","margin","cloudName","publicId","img_id","format","img_format","crop","gravity","height","Body","Title","name","fields","map","i","Text","fontSize","location","Footer","likes","length","comments","ItemsContainer","items","display","flexWrap","flexDirection","fluid","emptyMessage","LastItems","setItems","slice","loadItems","then","Collection","collection","description","showMore","CollectionsContainer","collections","index","BiggestCollections","setCollections","biggestCollections","sort","b","loadCollections","HomePage","User","onSelect","setOnSelect","selected","finded","first_name","last_name","status","InputGroup","Checkbox","checked","UsersTable","usersData","users","setUsers","Table","striped","bordered","hover","marginRight","selectAll","ControlPanel","load","control","alignItems","ButtonToolbar","aria-label","ButtonGroup","appointAdmin","removeAdmin","delete","block","unblock","AdminPage","userData","setUserData","loadUsers","LanguageChange","innerText","Dropdown","Toggle","Menu","ThemeChange","BurgerMenu","isLogged","logout","text","search","setText","isOpen","setIsOpen","Collapse","in","header","inline","Header","userId","open","clear","Navbar","bg","home","String","signup","signin","CreateCollectionModal","show","hide","create","dropText","setDropText","dropColor","setDropColor","setType","addError","setAddError","advancedFields","setAdvancedFields","file","imgUrl","form","setForm","formHandler","field","Modal","onHide","closeButton","createCollection","as","alcohol","books","coins","addField","numberField","textField","dateField","checkboxField","inlineTextField","count","advancedField","rows","collectionImage","onMouseEnter","onMouseLeave","children","borderColor","onDrop","substr","shortDescription","owner","showModal","setShowModal","formData","FormData","append","collection2","CollectionsPage","ownerId","useParams","setOwner","loadUser","ItemCreateModal","tags","setFile","createItem","itemName","addKeys","itemImage","ChangeFieldsModal","edit","values","setValues","changeItemFields","val","push","new","splice","del","save","cancel","Info","info","loadCollection","showModal2","setShowModal2","editMode","setEditMode","loadFile","parentName","ownerName","createNewItem","editCollection","descriptionB","CollectionPage","setInfo","setFields","loading2","isLiked","setIsLiked","likesCount","setLikesCount","setLike","like","parent","includes","cursor","editItem","ItemFields","loadItem","itemInfo","position","top","right","Comment","background","boxShadow","Comments","itemID","isAuth","isAuthUser","setComments","setMessage","loadComments","bool","setTimeout","clearInterval","setInterval","itemId","commentsMessage","send","ItemPage","renderSuggestion","suggestion","SearchPage","paramText","input","setInput","setTags","allTags","setAllTags","suggestions","setSuggestions","result","setResult","findItems","loadTags","renderInput","addTag","props","shouldRenderSuggestions","trim","getSuggestionValue","onSuggestionSelected","inputProps","onSuggestionsClearRequested","onSuggestionsFetchRequested","AutocompleteRenderInput","onChangeInput","filter","inputValue","App","document","setAttribute","logged","path","exact","to","defaultState","reducer","action","createStore","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.e25c26b5.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\"\r\n\r\n\r\nexport const useRequest = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [success, setSuccess] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body && headers[\"Content-Type\"] === \"application/json\") {\r\n                body = JSON.stringify(body)\r\n            }\r\n            const response = await fetch(url, { method, body, headers })\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Что-то пошло не так\")\r\n            }\r\n            setLoading(false)\r\n            setError(null)\r\n            setSuccess(\"Регистрация прошла успешно.\")\r\n            return data\r\n        } catch(e) {\r\n            setLoading(false)\r\n            setSuccess(false)\r\n            setError(e.message)\r\n        }\r\n    }, [])\r\n\r\n    return { loading, error, request, success }\r\n}","import React, {useState} from \"react\"\r\nimport {Button, Col, Container, Form, Nav, Row} from \"react-bootstrap\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\"\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nexport default function SignUpPage() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const { loading, error, request, success } = useRequest()\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    async function sendData(e) {\r\n        e.preventDefault()\r\n        try {\r\n            await request(\r\n                \"/api/auth/register\",\r\n                \"POST\",\r\n                {\r\n                    email,\r\n                    username,\r\n                    password,\r\n                    role: \"User\"\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (error === null) {\r\n                setEmail(\"\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch(e) {\r\n            throw e\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container className={\"mt-4 py-5\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Col lg={{ span: 6, offset: 3 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>{languages[lang].email}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>{languages[lang].username}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder={languages[lang].enterName}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>{languages[lang].password}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder={languages[lang].password}\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row style={{ color: error ? \"red\" : \"green\", marginLeft: 0 }}>\r\n                        <span>{error || success}</span>\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={sendData} disabled={loading}>\r\n                        {languages[lang].signUp}\r\n                    </Button>\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"/signIn\" style={{ padding: 0, marginTop: \"10px\" }}>{languages[lang].signIn}</Nav.Link>\r\n                    </Nav>\r\n                </Form>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}","\r\nexport default async function auth(token, dispatch) {\r\n    try {\r\n        const body = JSON.stringify({ token })\r\n        const res = await fetch(\"/api/auth/auth\", {\r\n            method: \"POST\",\r\n            body,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const data = await res.json()\r\n\r\n        console.log(\"auth\", data)\r\n        if (data.ok) {\r\n            dispatch({ type: \"AUTH_USER\", payload: { id: data.user._id, role: data.user.role } })\r\n            dispatch({ type: \"SET_THEME\", payload: data.user.theme })\r\n            dispatch({ type: \"SET_LANGUAGE\", payload: data.user.language })\r\n            return data\r\n        } else {\r\n            dispatch({type: \"LOGOUT_USER\"})\r\n            dispatch({ type: \"SET_THEME\", payload: localStorage.getItem(\"theme\") || \"light\" })\r\n            dispatch({ type: \"SET_LANGUAGE\", payload: localStorage.getItem(\"language\") || \"rus\" })\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Form, Nav, Row} from \"react-bootstrap\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport auth from \"../shared/auth\"\r\nconst languages = require(\"../languages.json\")\r\n\r\nexport default function SignInPage() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const { loading, error, request } = useRequest()\r\n    const dispatch = useDispatch()\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    useEffect(() => {\r\n        window.VK.Widgets.Auth('vk_auth', {\r\n            onAuth: (user) => login(\"vk\", user)\r\n        })\r\n    }, [])\r\n\r\n    async function login(type, user) {\r\n        try {\r\n            const data = await request(\r\n                \"/api/auth/login\",\r\n                \"POST\",\r\n                {\r\n                    type,\r\n                    user\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (data.ok) {\r\n                localStorage.setItem(\"token\", data.token)\r\n                localStorage.setItem(\"userId\", data.user._id)\r\n                localStorage.setItem(\"type\", type)\r\n                await auth(data.token, dispatch)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <Container className={\"mt-4 py-5\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Col lg={{ span: 6, offset: 3 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>{languages[lang].username}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder={languages[lang].enterName}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>{languages[lang].password}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder={languages[lang].password}\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row style={{ color: \"red\", marginLeft: 0 }}>\r\n                        <span>{error}</span>\r\n                    </Row>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={() => login(\"common\", { username, password })}\r\n                        disabled={loading}\r\n                    >{languages[lang].signIn}\r\n                    </Button>\r\n\r\n                    <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n                        <GoogleLogin\r\n                            clientId=\"808424836478-45hk3q9s4jbhlc9thn8sud56g7ff1u3m.apps.googleusercontent.com\"\r\n                            redirectUri={\"http://localhost:3000\"}\r\n                            onSuccess={(res) => login(\"google\", res.profileObj)}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n                        <div id=\"vk_auth\"></div>\r\n                    </Row>\r\n\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"/signUp\" style={{ padding: 0, marginTop: \"10px\" }}>{languages[lang].signUp}</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}","import React from \"react\"\r\nimport Image from \"cloudinary-react/lib/components/Image\";\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Item({ item, size }) {\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    function openItem() {\r\n        window.location = \"/item/\" + item._id\r\n    }\r\n    return (\r\n        <Col xl={size} lg={size + 1} md={4} sm={6} xs={12}>\r\n            <Card\r\n                className={\"my-3\" + (theme === \"dark\" ? \"text-white bg-dark\" : \"bg-light\")}\r\n                style={{ width: '185px', margin: \"auto\" }}\r\n            >\r\n                <Image cloudName=\"itransit\" publicId={item.img_id} format={item.img_format}>\r\n                    <Transformation crop=\"fill\" gravity=\"faces\" width=\"185\" height=\"150\"/>\r\n                </Image>\r\n                <Card.Body>\r\n                    <Card.Title>{item.name}</Card.Title>\r\n                    {\r\n                        item.fields.map((e, i) => {\r\n                            return <Card.Text key={i}><strong>{e.name + \": \"}</strong> {\r\n                                e.type !== \"checkbox\" ? e.value ? e.value : \"empty\"\r\n                                    : !e.value ? <Icon.X  style={{ color: \"#e22b2b\", fontSize: \"24px\" }}/>\r\n                                    : <Icon.Check2  style={{ color: \"#42b32c\", fontSize: \"24px\" }}/>\r\n                            }</Card.Text>\r\n                        })\r\n                    }\r\n                    <Button variant=\"primary\" onClick={openItem}>Show More</Button>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Row>\r\n                        <Col xs={6} className={\"px-0\"}>\r\n                            <Card.Text style={{ fontSize: \"13px\"}}>likes: {item.likes.length}</Card.Text>\r\n                        </Col>\r\n                        <Col className={\"px-0\"}>\r\n                            <Card.Text style={{ fontSize: \"13px\"}}>comments: {item.comments.length}</Card.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\nexport default Item","import React from \"react\"\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Item from \"./Item\";\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction ItemsContainer({ items, size }) {\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                flexDirection: \"row\"\r\n            }}\r\n            className={\"mt-4 py-3 bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n            + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}\r\n            fluid\r\n        >\r\n            <Row className={\"w-100 justify-content-center mb-3 mx-auto\"}>\r\n                <h1>{languages[lang].items}</h1>\r\n            </Row>\r\n            <Row className={\"w-100 mt-3 m-auto\"}>\r\n                {\r\n                    items && items.length > 0 ? items.map((e, i) => {\r\n                        return <Item item={e} key={i} size={size} />\r\n                    }) :\r\n                        <h5 className={\"text-center w-100\"}>{languages[lang].emptyMessage}</h5>\r\n                }\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ItemsContainer","import React, {useEffect, useState} from \"react\"\r\nimport ItemsContainer from \"../CollectionPage/ItemsContainer\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\n\r\nfunction LastItems() {\r\n    const [items, setItems] = useState(null)\r\n    const { request, loading } = useRequest()\r\n\r\n    async function loadItems() {\r\n        const data = await request(\r\n            \"/api/collections/getAllItems\",\r\n            \"GET\"\r\n        )\r\n        if (data && data.ok) {\r\n            setItems(data.items.slice(data.items.length - 7 > 0 && data.items.length - 7))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadItems().then()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                loading && items\r\n                    ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row>\r\n                    :\r\n                    <ItemsContainer items={items} size={3} />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LastItems","import React from \"react\"\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Image from \"cloudinary-react/lib/components/Image\"\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\"\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction Collection({ collection }) {\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    function openCollection() {\r\n        window.location = \"/collection/\" + collection._id\r\n    }\r\n    return (\r\n        <Col xl={4} md={6} xs={12}>\r\n            <Card\r\n                className={\"my-3\" + (theme === \"dark\" ? \"text-white bg-dark\" : \"bg-light\")}\r\n                style={{ width: '276px', margin: \"auto\" }}\r\n            >\r\n                <Image cloudName=\"itransit\" publicId={collection.img_id} format={collection.img_format}>\r\n                    <Transformation crop=\"fill\" gravity=\"faces\" width=\"276\" height=\"190\"/>\r\n                </Image>\r\n                <Card.Body>\r\n                    <Card.Title>{collection.name}</Card.Title>\r\n                    <ReactMarkdown className={\"card-text\"}>\r\n                        {collection.description}\r\n                    </ReactMarkdown>\r\n                    <Button variant=\"primary\" onClick={openCollection}>{languages[lang].showMore}</Button>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Row className={\"justify-content-center\"}>\r\n                        <Card.Text style={{ fontSize: \"16px\"}}>items: {collection.items}</Card.Text>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n\r\n    )\r\n}\r\n\r\nexport default Collection","import React from \"react\"\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Collection from \"./Collection\";\r\nimport {useSelector} from \"react-redux\";\r\nconst language = require(\"../languages.json\")\r\n\r\nfunction CollectionsContainer({ collections }) {\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                flexDirection: \"row\"\r\n            }}\r\n            className={\"mt-4 py-3\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n                        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}\r\n            fluid\r\n        >\r\n            <Row className={\"w-100 mb-3 justify-content-center mx-auto\"}>\r\n                <h1>{language[lang].collections.collections}</h1>\r\n            </Row>\r\n            <Row className={\"w-100 mt-3 m-auto\"}>\r\n                {\r\n                    collections && collections.length > 0 ?\r\n                        collections.map((e,i) => {\r\n                            return <Collection collection={e} index={i} key={i} />\r\n                        }) :\r\n                        <h5 className={\"text-center w-100\"}>{language[lang].collections.emptyMessage}</h5>\r\n                }\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default CollectionsContainer\r\n","import React, {useEffect, useState} from \"react\"\r\nimport CollectionsContainer from \"../CollectionsPage/CollectionsContainer\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nfunction BiggestCollections() {\r\n    const [collections, setCollections] = useState(null)\r\n    const { request, loading } = useRequest()\r\n\r\n    async function loadCollections() {\r\n        const data = await request (\r\n            \"/api/collections/getAllCollections\",\r\n            \"GET\"\r\n        )\r\n        if (data && data.ok) {\r\n            const biggestCollections = data.collections.sort((a, b) => {\r\n                return b.items > a.items ? 1 : -1\r\n            }).slice(0, data.collections.length >= 3 ? 3 : data.collections.length)\r\n            setCollections(biggestCollections)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCollections().then()\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            {\r\n                loading ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row>\r\n                    :\r\n                    <CollectionsContainer collections={collections} />\r\n            }\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default BiggestCollections","import React from \"react\"\r\nimport LastItems from \"./LastItems\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport BiggestCollections from \"./BiggestCollections\";\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <Container className={\"py-5\"}>\r\n            <LastItems />\r\n            <BiggestCollections />\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {InputGroup, Row} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nfunction User({ user, index }) {\r\n    const dispatch = useDispatch()\r\n    const [onSelect, setOnSelect] = useState(false)\r\n    const selected = useSelector(state => state.selected)\r\n\r\n    function checkBoxHandler(e) {\r\n        if (e.target.checked) {\r\n            dispatch({ type: \"SELECT_USER\", payload: user })\r\n        }\r\n        else dispatch({ type: \"UNSELECT_USER\", payload: user })\r\n    }\r\n\r\n    function open(e) {\r\n        if (e.target.name !== \"checkbox\")window.location = \"/collections/\" + user._id\r\n    }\r\n\r\n    useEffect(() => {\r\n        let finded = false\r\n        selected.map(e => {\r\n            if (e === user) {\r\n                finded = true\r\n                setOnSelect(true)\r\n            }\r\n            return null\r\n        })\r\n        if (!finded) setOnSelect(false)\r\n    }, [selected, user])\r\n\r\n    return (\r\n        <tr onClick={open}>\r\n            <td className={\"d-none d-sm-table-cell\"}>{index}</td>\r\n            <td className={\"d-none d-md-table-cell\"}>{user.email}</td>\r\n            <td>{user.username || user.first_name + \" \" + user.last_name}</td>\r\n            <td>{user.role}</td>\r\n            <td className={\"d-none d-sm-table-cell\"}>{user.type}</td>\r\n            <td>{user.status}</td>\r\n            <td className={\"px-4\"}>\r\n                <Row className=\"justify-content-center\">\r\n                    <InputGroup.Checkbox onChange={checkBoxHandler} checked={onSelect} name={\"checkbox\"} />\r\n                </Row>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useEffect, useState} from \"react\"\r\nimport {Container, InputGroup, Row, Table} from \"react-bootstrap\"\r\nimport User from \"./User\"\r\nimport ReactLoading from \"react-loading\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction UsersTable({ usersData, loading, error }) {\r\n    const [users, setUsers] = useState([])\r\n    const dispatch = useDispatch()\r\n    const selected = useSelector(state => state.selected)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    function checkboxHandler(e) {\r\n        if (e.target.checked) {\r\n            dispatch({ type: \"SELECT_ALL\", payload: usersData })\r\n        }\r\n        else dispatch({ type: \"UNSELECT_ALL\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsers(usersData.map((e, i) => {\r\n            return <User user={e} index={i} key={i}/>\r\n        }))\r\n\r\n    }, [usersData])\r\n    return (\r\n        <Container fluid >\r\n            <Table striped bordered hover variant={theme}>\r\n                <thead>\r\n                <tr>\r\n                    <th className={\"d-none d-sm-table-cell \"}>#</th>\r\n                    <th className={\"d-none d-md-table-cell \"}>{languages[lang].email}</th>\r\n                    <th>{languages[lang].username}</th>\r\n                    <th>{languages[lang].role}</th>\r\n                    <th className={\"d-none d-sm-table-cell \"}>{languages[lang].type}</th>\r\n                    <th>{languages[lang].status}</th>\r\n                    <th>\r\n                        <Row className=\"justify-content-center\">\r\n                            <span className={\"d-none d-md-flex\"} style={{ marginRight: \"10px\" }}>{languages[lang].selectAll}</span>\r\n                            <InputGroup.Checkbox\r\n                                checked={usersData.length === selected.length}\r\n                                onChange={checkboxHandler}\r\n                            />\r\n                        </Row>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.length <= 0 ? [] : users}\r\n                </tbody>\r\n            </Table>\r\n            { loading ?\r\n                <Row className=\"justify-content-md-center\">\r\n                    <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                </Row>\r\n                : error\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UsersTable","import React, {useEffect} from \"react\"\r\nimport {Button, ButtonGroup, ButtonToolbar, Container} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction ControlPanel({ load }) {\r\n    const selected = useSelector(state => state.selected)\r\n    const lang = useSelector(state => state.language)\r\n    const { request, loading } = useRequest()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        console.log(selected)\r\n    }, [selected])\r\n\r\n    async function control(url) {\r\n        selected.map(async (e) => {\r\n            await request(\r\n                \"/api/users/\" + url,\r\n                \"POST\",\r\n                {\r\n                    _id: e._id,\r\n                    type: localStorage.getItem(\"type\"),\r\n                    token: localStorage.getItem(\"token\")\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            load()\r\n            dispatch({ type: \"UNSELECT_ALL\" })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container fluid style={{ padding: \"10px\", alignItems: \"center\", display: \"flex\" }}>\r\n            <ButtonToolbar aria-label=\"admin-control-panel\">\r\n                <ButtonGroup aria-label=\"controls-1\" className={\"mr-5\"}>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        disabled={loading}\r\n                        onClick={() => control(\"appointAdmin\")}\r\n                        className={\"mr-2\"}\r\n                    >{languages[lang].appointAdmin}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => control(\"removeAdmin\")}\r\n                        disabled={loading}\r\n                        className={\"mr-2\"}\r\n                    >{languages[lang].removeAdmin}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => control(\"deleteUser\")}\r\n                        disabled={loading}\r\n                    >{languages[lang].delete}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup aria-label=\"controls-2\" className={\"mt-2 mt-sm-0\"}>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        disabled={loading}\r\n                        className={\"mr-2\"}\r\n                        onClick={() => control(\"blockUser\")}\r\n                    >{languages[lang].block}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        disabled={loading}\r\n                        onClick={() => control(\"unblockUser\")}\r\n                    >{languages[lang].unblock}\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </ButtonToolbar>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ControlPanel","import React, {useEffect, useState} from 'react'\r\nimport UsersTable from \"./UsersTable\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\"\r\nimport {Container} from \"react-bootstrap\";\r\nimport ControlPanel from \"./ControlPanel\";\r\n\r\nfunction AdminPage() {\r\n    const { loading, request, error } = useRequest()\r\n    const [userData, setUserData] = useState([])\r\n\r\n    async function loadUsers() {\r\n        const data = await request(\"/api/users/getUsers\")\r\n        if (data) setUserData(data.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUsers().then()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <ControlPanel load={loadUsers} />\r\n            <UsersTable usersData={userData} loading={loading} error={error} />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AdminPage","import React, {useState} from 'react'\r\nimport {Button, Col, Collapse, Dropdown, Form, Nav, Navbar, Row} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as Icon from \"react-bootstrap-icons\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nlet language = require('../languages.json')\r\n\r\nfunction Header({ isLogged }) {\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector(state => state.userId)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n    const [text, setText] = useState(\"\")\r\n    function logout() {\r\n        if (localStorage.getItem(\"type\") === \"google\") {\r\n            window.open(\"https://mail.google.com/mail/u/0/?logout&hl=en\", '_blank')\r\n        }\r\n        else if (localStorage.getItem(\"type\") === \"VK\") {\r\n            window.VK.Auth.logout((res) => {\r\n                console.log(res)\r\n            })\r\n        }\r\n        window.location = \"/signIn\"\r\n        localStorage.clear()\r\n        dispatch({ type: \"LOGOUT_USER\" })\r\n    }\r\n    function search() {\r\n        window.location = \"/search/\" + text\r\n    }\r\n    return (\r\n        <Navbar bg={theme} variant={theme} className={\"w-100 bg-\" + theme}>\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\">{language[lang].header.home}</Nav.Link>\r\n                { isLogged\r\n                    ?\r\n                    [\r\n                        <Nav.Link href={\"/collections/\" + String(userId)}\r\n                                  key={0}\r\n                        >{language[lang].header.collections}\r\n                        </Nav.Link>,\r\n                        <Nav.Link href=\"/search/\" key={1}>{language[lang].header.search}</Nav.Link>\r\n                    ]\r\n                    :\r\n                    [\r\n                        <Nav.Link href=\"/search/\" key={2}>{language[lang].header.search}</Nav.Link>,\r\n                        <Nav.Link href=\"/signUp\" key={0}>{language[lang].header.signup}</Nav.Link>,\r\n                        <Nav.Link href=\"/signIn\" key={1}>{language[lang].header.signin}</Nav.Link>\r\n                    ]\r\n                }\r\n            </Nav>\r\n            <Col className={\"d-none d-md-flex justify-content-end w-100\"}>\r\n                <Row>\r\n                    <LanguageChange />\r\n                    <ThemeChange />\r\n                    {\r\n                        isLogged\r\n                            ?\r\n                            <Button variant=\"outline-danger\"\r\n                                    onClick={logout}\r\n                                    className={\"mr-md-4\"}\r\n                            >{language[lang].header.logout}\r\n                            </Button>\r\n                            :\r\n                            []\r\n                    }\r\n                    <Form inline className={\"w-auto\"}>\r\n                        <Row className={\"d-none d-md-inline\"}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={language[lang].header.search}\r\n                                className=\"mr-sm-2\"\r\n                                value={text}\r\n                                onChange={(e) => setText(e.target.value)}\r\n                            />\r\n                            <Button variant=\"outline-info\" onClick={search}>{language[lang].header.search}</Button>\r\n                        </Row>\r\n                    </Form>\r\n                </Row>\r\n            </Col>\r\n            <BurgerMenu\r\n                logout={logout}\r\n                text={text}\r\n                setText={setText}\r\n                lang={lang}\r\n                isLogged={{isLogged}}\r\n                search={search}\r\n            />\r\n\r\n\r\n\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nfunction LanguageChange() {\r\n    const language = useSelector(state => state.language)\r\n    const dispatch = useDispatch()\r\n    const { request } = useRequest()\r\n\r\n    async function setLanguage(e) {\r\n        e.preventDefault()\r\n        await request(\r\n            \"/api/users/setLanguage\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                language: e.target.innerText\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        localStorage.setItem(\"language\", e.target.innerText)\r\n        dispatch({ type: \"SET_LANGUAGE\", payload: e.target.innerText })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Dropdown className={\"mr-2\"}>\r\n            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\r\n                {language}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item onClick={setLanguage}>{ language === \"rus\" ? \"en\" : \"rus\" }</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nfunction ThemeChange() {\r\n    const theme = useSelector(state => state.theme)\r\n    const dispatch = useDispatch()\r\n    const { request } = useRequest()\r\n\r\n    async function setTheme(e) {\r\n        await request(\r\n            \"/api/users/setTheme\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                theme: e.target.innerText\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        localStorage.setItem(\"theme\", e.target.innerText)\r\n        dispatch({ type: \"SET_THEME\", payload: e.target.innerText })\r\n    }\r\n\r\n\r\n    return (\r\n        <Dropdown className={\"mr-md-4 mr-2\"}>\r\n            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\r\n                {theme}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item onClick={setTheme}>{ theme === \"light\" ? \"dark\" : \"light\" }</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nfunction BurgerMenu({ isLogged, logout, lang, text, search, setText }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <Col className={\"d-flex d-md-none justify-content-end\"}>\r\n            <Row className={\"w-100 justify-content-end\"}>\r\n                    <Row className={\"w-100 justify-content-end pr-4\"}>\r\n                        <Icon.ThreeDots  style={{ fontSize: \"28px\" }} onClick={() => setIsOpen(!isOpen)}/>\r\n                    </Row>\r\n\r\n                    <Collapse in={isOpen}>\r\n                        <Row className={\"d-\" + (isOpen ? \"flex\" : \"none\")}>\r\n                            <Col >\r\n                                <LanguageChange />\r\n                                <ThemeChange />\r\n                                {\r\n                                    isLogged\r\n                                        ?\r\n                                        <Button variant=\"outline-danger\"\r\n                                                onClick={logout}\r\n                                                className={\"mr-md-4\"}\r\n                                        >{language[lang].header.logout}\r\n                                        </Button>\r\n                                        :\r\n                                        []\r\n                                }\r\n                                <Form inline className={\"w-auto\"}>\r\n                                    <Row className={\"d-none d-md-inline\"}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder={language[lang].header.search}\r\n                                            className=\"mr-sm-2\"\r\n                                            value={text}\r\n                                            onChange={(e) => setText(e.target.value)}\r\n                                        />\r\n                                        <Button variant=\"outline-info\" onClick={search}>{language[lang].header.search}</Button>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Collapse>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Form, Modal, Row} from \"react-bootstrap\"\r\nimport { StyledDropZone } from 'react-drop-zone'\r\nimport 'react-drop-zone/dist/styles.css'\r\nimport ReactLoading from \"react-loading\";\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction CreateCollectionModal({ show, hide, create, loading, error }) {\r\n    const lang = useSelector(state => state.language)\r\n    const [dropText, setDropText] = useState(lang === \"en\" ?\r\n                                                \"Click or drop your file here\" :\r\n                                                \"Нажми или сбрось свой файл сюда\")\r\n    const [dropColor, setDropColor] = useState(\"#888\")\r\n    const [type, setType] = useState(\"number\")\r\n    const [addError, setAddError] = useState(\"\")\r\n    const [advancedFields, setAdvancedFields] = useState([])\r\n    const [form, setForm] = useState({\r\n        file: null,\r\n        imgUrl: \"\",\r\n        name: \"\",\r\n        theme: \"Alcohol\",\r\n        description: \"\",\r\n        advancedFields\r\n    })\r\n\r\n    function formHandler(value, field) {\r\n        setForm({...form, [field]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setForm({...form, advancedFields})\r\n    }, [advancedFields])\r\n\r\n    function onDrop(file) {\r\n        const name = file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\"\r\n        setForm({...form, file })\r\n        setDropText((lang === \"rus\" ? \"Файл выбран (\" : \"File selected (\") + name + \")\")\r\n        setDropColor(\"#74d239\")\r\n    }\r\n\r\n    function addField() {\r\n        let count = 1\r\n        advancedFields.map((e) => {\r\n            if (e.type === type) count++\r\n            return null\r\n        })\r\n        if (count > 3) {\r\n            setAddError(\"Максимальное число полей такого типа 3\")\r\n            return\r\n        }\r\n        setAdvancedFields([...advancedFields, { type, name: \"\" }])\r\n        setAddError(\"\")\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={hide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{languages[lang].createCollection}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"collectionName\">\r\n                        <Form.Label>{languages[lang].name}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            onChange={(e) => formHandler(e.target.value, \"name\")}\r\n                            value={form.name}\r\n                            placeholder={languages[lang].enterName}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"themeSelect\">\r\n                        <Form.Label>{languages[lang].theme}</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            onChange={(e) => formHandler(e.target.value, \"theme\")}\r\n                            value={form.theme}\r\n                        >\r\n                            <option value={\"Alcohol\"}>{languages[lang].alcohol}</option>\r\n                            <option value={\"Books\"}>{languages[lang].books}</option>\r\n                            <option value={\"Coins\"}>{languages[lang].coins}</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Text>{languages[lang].addField}</Form.Text>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            onChange={(e) => setType(e.target.value)}\r\n                            value={type}\r\n                        >\r\n                            <option value={\"number\"}>{languages[lang].numberField}</option>\r\n                            <option value={\"text\"}>{languages[lang].textField}</option>\r\n                            <option value={\"date\"}>{languages[lang].dateField}</option>\r\n                            <option value={\"checkbox\"}>{languages[lang].checkboxField}</option>\r\n                            <option value={\"input\"}>{languages[lang].inlineTextField}</option>\r\n                        </Form.Control>\r\n                        <Row>\r\n                            <p style={{ color: \"red\", margin: \"0 auto\" }}>{addError}</p>\r\n                        </Row>\r\n                        <Row>\r\n                            <Button onClick={addField} variant={\"outline-primary mt-2 mx-auto w-50\"}>{languages[lang].addField}</Button>\r\n                        </Row>\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"themeSelect\">\r\n                        <Form.Text>{languages[lang].advancedField}</Form.Text>\r\n                        {\r\n                            advancedFields.map((e, i) => {\r\n                                if (e.type === \"text\") {\r\n                                    return <Form.Control\r\n                                        as=\"textarea\"\r\n                                        placeholder=\"Enter name of textarea\"\r\n                                        onChange={(e) => {\r\n                                            advancedFields[i].name = e.target.value\r\n                                        }}\r\n                                        className={\"mt-2\"}\r\n                                        key={i}\r\n                                        rows={3}\r\n                                    />\r\n                                }\r\n                                else {\r\n                                    return <Form.Control\r\n                                        type={\"input\"}\r\n                                        placeholder={\"Enter name of \" + e.type + \" field\"}\r\n                                        key={i}\r\n                                        className={\"mt-2\"}\r\n                                        onChange={(e) => {\r\n                                            advancedFields[i].name = e.target.value\r\n                                        }}\r\n                                    />\r\n                                }\r\n                            })\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label>{languages[lang].collectionImage}</Form.Label>\r\n                        <StyledDropZone\r\n                            onMouseEnter={() => {if (dropColor === \"#888\")setDropColor(\"#46b2ae\")}}\r\n                            onMouseLeave={() => {if (dropColor === \"#46b2ae\") setDropColor(\"#888\")}}\r\n                            children={dropText}\r\n                            style={{ borderColor: dropColor }}\r\n                            onDrop={onDrop}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label>{languages[lang].shortDescription}</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={4}\r\n                            placeholder={languages[lang].description}\r\n                            onChange={(e) => formHandler(e.target.value, \"description\")}\r\n                            value={form.description}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"container align-items-md-center\">\r\n                <Row className={\"justify-content-md-center w-100\"}>\r\n                    <span className={\"my-1\"} style={{ color: \"red\"}}>{error ? error : \"\"}</span>\r\n                </Row>\r\n                {\r\n                    !loading\r\n                    ?\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <Button variant=\"outline-success\" onClick={() => create(form)}>\r\n                                {languages[lang].createCollection}\r\n                            </Button>\r\n                        </Row>\r\n                    :\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <ReactLoading type={\"spin\"} color={\"#000000\"} height={30} width={30} />\r\n                        </Row>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateCollectionModal","import React, {useState} from \"react\"\r\nimport {Button, Navbar, Row} from \"react-bootstrap\";\r\nimport {useSelector} from \"react-redux\";\r\nimport CreateCollectionModal from \"./CreateCollectionModal\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nconst language = require(\"../languages.json\")\r\n\r\nfunction ControlPanel({ owner, loadCollections }) {\r\n    const role = useSelector(state => state.role)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n    const userId = useSelector(state => state.userId)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const { loading, request, error } = useRequest()\r\n\r\n    async function createCollection(form) {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", form.file)\r\n        const data = await request(\"/api/files/fileUpload\", \"POST\", formData)\r\n        if (data && data.ok) {\r\n            form.img_id = data.img_id\r\n            form.img_format = data.img_format\r\n            form.userId = owner._id\r\n            form.token = localStorage.getItem(\"token\")\r\n            const res = await request(\r\n                \"/api/collections/createCollection\",\r\n                \"POST\",\r\n                form,\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (res && res.ok) {\r\n                setShowModal(false)\r\n                loadCollections().then()\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Navbar className={\"px-mg-5 px-4 mt-2 justify-content-between \"\r\n                + \"bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n                + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Row>\r\n                <span><strong>{language[lang].collections.owner}</strong>: {owner.username}</span>\r\n            </Row>\r\n            <Row>\r\n                {\r\n                    role === \"Admin\" || userId === owner._id\r\n                    ?\r\n                    <Button\r\n                        variant={\"outline-success\"}\r\n                        onClick={() => setShowModal(true)}\r\n                    >{language[lang].collections.create} <span className={\"d-none d-sm-inline\"}>{language[lang].collections.collection2}</span>\r\n                    </Button>\r\n                    :\r\n                    []\r\n                }\r\n            </Row>\r\n            <CreateCollectionModal\r\n                show={showModal}\r\n                hide={() => setShowModal(false)}\r\n                create={createCollection}\r\n                loading={loading}\r\n                error={error}\r\n            />\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default ControlPanel","import React, {useEffect, useState} from \"react\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router\";\r\nimport CollectionsContainer from \"./CollectionsContainer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction CollectionsPage() {\r\n    const ownerId = useParams().ownerId\r\n    const lang = useSelector(state => state.language)\r\n    const [collections, setCollections] = useState([])\r\n    const [owner, setOwner] = useState({})\r\n    const { request, loading, error } = useRequest()\r\n    async function loadUser() {\r\n        const data = await request(\r\n            \"/api/collections/getCollections\",\r\n            \"POST\",\r\n            { id: ownerId },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data) {\r\n            setCollections(data.collections)\r\n            setOwner(data.owner)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerId) loadUser().then()\r\n    }, [ownerId])\r\n\r\n    return (\r\n        <Container>\r\n            <ControlPanel owner={owner} loadCollections={loadUser} />\r\n            <span style={{ color: \"red\" }}>{error ? error : \"\"}</span>\r\n            {\r\n                !loading\r\n                ?\r\n                    <CollectionsContainer collections={collections} />\r\n                :\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CollectionsPage","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {StyledDropZone} from \"react-drop-zone\";\r\nimport ReactLoading from \"react-loading\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction ItemCreateModal({ create, loading, error, show, hide, fields }) {\r\n    const lang = useSelector(state => state.language)\r\n    const [dropText, setDropText] = useState(lang === \"en\" ?\r\n                                            \"Click or drop your file here\" :\r\n                                            \"Нажми или сбрось свой файл сюда\")\r\n    const [dropColor, setDropColor] = useState(\"#888\")\r\n    const [item, setItem] = useState({ fields, name: \"\", tags: [] })\r\n    const [file, setFile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setItem({...item, fields})\r\n    }, [fields])\r\n\r\n    function onDrop(file) {\r\n        const name = file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\"\r\n        setDropText((lang === \"rus\" ? \"Файл выбран (\" : \"File selected (\") + name + \")\")\r\n        setDropColor(\"#74d239\")\r\n        const formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        setFile(formData)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal show={show} onHide={hide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{languages[lang].createItem}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>{languages[lang].itemName}</Form.Label>\r\n                    <Form.Control\r\n                        type={\"text\"}\r\n                        onChange={(e) => setItem({...item, name: e.target.value})}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Text className={\"mb-2\"}>{languages[lang].tags}</Form.Text>\r\n                    <TagsInput value={item.tags} onChange={(tags) => setItem({...item, tags})} addKeys={[9, 13, 32]} />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Text>{languages[lang].advancedFields}</Form.Text>\r\n                    {\r\n                        fields.map((e, i) => {\r\n                            if (e.type === \"text\") {\r\n                                return [\r\n                                    <Form.Label key={i}>{e.name}</Form.Label>,\r\n                                    <Form.Control\r\n                                        key={i + 1}\r\n                                        as=\"textarea\"\r\n                                        onChange={(e) => {\r\n                                            item.fields[i].value = e.target.value\r\n                                        }}\r\n                                    />\r\n                                ]\r\n                            } else {\r\n                                return [\r\n                                    <Form.Label key={i}>{e.name}</Form.Label>,\r\n                                    <Form.Control\r\n                                        key={i + 1}\r\n                                        type={e.type}\r\n                                        onChange={(e) => {\r\n                                            item.fields[i].value = e.type !== \"checkbox\"\r\n                                                ? e.target.value :\r\n                                                e.target.checked\r\n                                        }}\r\n                                    />\r\n                                ]\r\n                            }\r\n                        })\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\">\r\n                    <Form.Label>{languages[lang].itemImage}</Form.Label>\r\n                    <StyledDropZone\r\n                        onMouseEnter={() => {if (dropColor === \"#888\")setDropColor(\"#46b2ae\")}}\r\n                        onMouseLeave={() => {if (dropColor === \"#46b2ae\") setDropColor(\"#888\")}}\r\n                        children={dropText}\r\n                        style={{ borderColor: dropColor }}\r\n                        onDrop={onDrop}\r\n                    />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"container align-items-md-center\">\r\n                <Row className={\"justify-content-md-center w-100\"}>\r\n                    <span className={\"my-1\"} style={{ color: \"red\"}}>{error ? error : \"\"}</span>\r\n                </Row>\r\n                {\r\n                    !loading\r\n                        ?\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <Button variant=\"outline-success\" onClick={() => create(item, file)}>\r\n                                {languages[lang].createItem}\r\n                            </Button>\r\n                        </Row>\r\n                        :\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <ReactLoading type={\"spin\"} color={\"#000000\"} height={30} width={30} />\r\n                        </Row>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ItemCreateModal","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\"\r\nimport ReactLoading from \"react-loading\"\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction ChangeFieldsModal({ fields, show, hide, loading, error, edit }) {\r\n    const lang = useSelector(state => state.language)\r\n    const [values, setValues] = useState([])\r\n    const [type, setType] = useState(\"number\")\r\n    const [addError, setAddError] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(fields)\r\n        setValues(fields)\r\n    }, [fields])\r\n\r\n    function formHandler(e, i) {\r\n        let val = [...values]\r\n        val[i].name = e.target.value\r\n        setValues(val)\r\n    }\r\n\r\n    function del(i) {\r\n        let val = [...values]\r\n        val.splice(i, 1)\r\n        setValues(val)\r\n    }\r\n\r\n    function addField() {\r\n        let val = [...values]\r\n        let count = 1\r\n        val.map((e) => {\r\n            if (e.type === type) count++\r\n            return null\r\n        })\r\n        if (count > 3) {\r\n            setAddError(\"Максимальное число полей такого типа 3\")\r\n            return\r\n        }\r\n        val.push({ type, name: type, new: true })\r\n        setValues(val)\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={hide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{languages[lang].changeItemFields}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Text>{languages[lang].addField}</Form.Text>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    value={type}\r\n                >\r\n                    <option value={\"number\"}>{languages[lang].numberField}</option>\r\n                    <option value={\"text\"}>{languages[lang].textField}</option>\r\n                    <option value={\"date\"}>{languages[lang].dateField}</option>\r\n                    <option value={\"checkbox\"}>{languages[lang].checkboxField}</option>\r\n                    <option value={\"input\"}>{languages[lang].inlineTextField}</option>\r\n                </Form.Control>\r\n                <Row>\r\n                    <p style={{ color: \"red\", margin: \"0 auto\" }}>{addError}</p>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        onClick={addField}\r\n                        variant={\"outline-primary mt-2 mx-auto w-50\"}\r\n                    >{languages[lang].addField}</Button>\r\n                </Row>\r\n\r\n                <Form.Text>{languages[lang].advancedFields}</Form.Text>\r\n                {\r\n                    values.map((e, i) => {\r\n                        return (\r\n                            <Row key={i} className={\"mt-2\"}>\r\n                                <Col xs={11}>\r\n                                    <Form.Control type={\"text\"} onChange={(e) => formHandler(e, i)} value={values[i].name} />\r\n                                </Col>\r\n                                <Col className={\"pl-0 py-1\"}>\r\n                                    <Icon.XCircle className={\"x\"} onClick={() => del(i)} style={{ fontSize: \"24px\" }} />\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"container align-items-md-center\">\r\n                <Row className={\"justify-content-md-center w-100\"}>\r\n                    <span className={\"my-1\"} style={{ color: \"red\"}}>{error ? error : \"\"}</span>\r\n                </Row>\r\n                {\r\n                    !loading\r\n                        ?\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <Button variant=\"outline-success\" className={\"mx-3\"} onClick={() => edit(values)}>\r\n                                {languages[lang].save}\r\n                            </Button>\r\n                            <Button variant=\"outline-danger\" className={\"mx-3\"} onClick={hide}>\r\n                                {languages[lang].cancel}\r\n                            </Button>\r\n                        </Row>\r\n                        :\r\n                        <Row className=\"justify-content-md-center w-100\">\r\n                            <ReactLoading type={\"spin\"} color={\"#000000\"} height={30} width={30} />\r\n                        </Row>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ChangeFieldsModal","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Row, Form} from \"react-bootstrap\"\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\"\r\nimport Image from \"cloudinary-react/lib/components/Image\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport ItemCreateModal from \"./ItemCreateModal\";\r\nimport {StyledDropZone} from \"react-drop-zone\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ChangeFieldsModal from \"./ChangeFieldsModal\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction Info({ info, loadCollection, fields, id, edit }) {\r\n    const role = useSelector(state => state.role)\r\n    const userId = useSelector(state => state.userId)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [showModal2, setShowModal2] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [values, setValues] = useState({ name: info.name, description: info.description, file: null })\r\n    const [dropText, setDropText] = useState(\"Click or drop your file here\")\r\n    const [dropColor, setDropColor] = useState(\"#888\")\r\n    const { request, error, loading } = useRequest()\r\n\r\n    useEffect(() => {\r\n        setValues({ name: info.name, description: info.description, file: null })\r\n    }, [info])\r\n\r\n    async function deleteCollection() {\r\n        const data = await request(\r\n            \"/api/collections/deleteCollection\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                id: info.id,\r\n                ownerId: info.ownerId\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            window.location = \"/collections/\" + info.ownerId\r\n        }\r\n    }\r\n\r\n    async function createItem(item, file) {\r\n        const loadFile = await request(\r\n            \"/api/files/fileUpload\",\r\n            \"POST\",\r\n            file\r\n        )\r\n        if (loadFile && loadFile.ok) {\r\n            const data = await request(\r\n                \"/api/collections/createItem\",\r\n                \"POST\",\r\n                {\r\n                    ...item,\r\n                    img_id: loadFile.img_id,\r\n                    img_format: loadFile.img_format,\r\n                    parentName: info.name,\r\n                    token: localStorage.getItem(\"token\"),\r\n                    id: id,\r\n                    ownerId: info.ownerId\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (data && data.ok) {\r\n                loadCollection().then()\r\n                setShowModal(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    function formHandler(e) {\r\n        setValues({...values, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function tryEdit() {\r\n        let fields = {}\r\n        if (values.name !== info.name) fields.name = values.name\r\n        if (values.description !== info.description) fields.description = values.description\r\n        if (values.file) fields.file = values.file\r\n        edit(fields)\r\n    }\r\n\r\n    async function editFields(fields) {\r\n        const data = await request (\r\n            \"/api/collections/editCollectionFields\",\r\n            \"POST\",\r\n            {\r\n                ownerId: info.ownerId,\r\n                token: localStorage.getItem(\"token\"),\r\n                id: info.id,\r\n                fields\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            loadCollection().then()\r\n            setShowModal2(false)\r\n        }\r\n    }\r\n\r\n    function onDrop(file) {\r\n        const name = file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\"\r\n        setValues({...values, file})\r\n        setDropText(\"Файл выбран (\" + name + \")\")\r\n        setDropColor(\"#74d239\")\r\n    }\r\n\r\n    return (\r\n        <Container className={\"mt-4 py-3 bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Row >\r\n                <Col xl={4} lg={5} md={6} xs={12} className={\"text-center px-lg-2 px-0 text-lg-left\"}>\r\n                    {\r\n                        editMode ?\r\n                            <StyledDropZone\r\n                                onMouseEnter={() => {if (dropColor === \"#888\")setDropColor(\"#46b2ae\")}}\r\n                                onMouseLeave={() => {if (dropColor === \"#46b2ae\") setDropColor(\"#888\")}}\r\n                                children={dropText}\r\n                                style={{ borderColor: dropColor }}\r\n                                onDrop={onDrop}\r\n                            /> :\r\n                            <Image className={\"ml-lg-4\"} cloudName=\"itransit\" publicId={info.img_id} format={info.img_format}>\r\n                                <Transformation crop=\"fill\" gravity=\"faces\" width=\"300\" height=\"200\"/>\r\n                            </Image>\r\n                    }\r\n                </Col>\r\n                <Col className={\"text-center text-md-left px-lg-2 px-0 mr-3 mr-lg-0\"}>\r\n                    <Row>\r\n                        <Col lg={7} md={7} xs={12}>\r\n                            {\r\n                                editMode ?\r\n                                        <Form.Control onChange={formHandler} name={\"name\"} type=\"text\" value={values.name} />\r\n                                        :\r\n                                        <h2 className={\"fs-6\"}>{info.name}</h2>\r\n                            }\r\n                            <p><strong>{languages[lang].collections.owner}</strong>: <a href={\"/collections/\" + info.ownerId}>{info.ownerName}</a></p>\r\n                            <p><strong>{languages[lang].theme}</strong>: {info.theme}</p>\r\n                        </Col>\r\n                        <Col style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\"\r\n                        }}>\r\n                            {\r\n                                role === \"Admin\" || userId === info.ownerId ?\r\n                                    editMode ?\r\n                                        [\r\n                                            <Button\r\n                                                variant={\"outline-success mb-2 mb-lg-3\"}\r\n                                                key={0}\r\n                                                onClick={tryEdit}\r\n                                                disabled={loading}\r\n                                            >{languages[lang].save}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                variant={\"outline-danger my-0 mt-lg-3\"}\r\n                                                onClick={() => setEditMode(false)}\r\n                                                disabled={loading}\r\n                                                key={1}\r\n                                            >{languages[lang].cancel}\r\n                                            </Button>\r\n                                        ] :\r\n                                        [\r\n                                            <Button\r\n                                                variant={\"outline-success mb-2 mb-lg-3\"}\r\n                                                onClick={() => setShowModal(true)}\r\n                                                key={1}\r\n                                            >{languages[lang].createNewItem}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                variant={\"outline-primary mb-2 mt-lg-3\"}\r\n                                                onClick={() => setEditMode(true)}\r\n                                                key={2}\r\n                                            >{languages[lang].editCollection}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                key={3}\r\n                                                variant={\"outline-primary mb-2 mt-lg-3\"}\r\n                                                onClick={() => setShowModal2(true)}\r\n                                            >{languages[lang].changeItemFields}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                key={4}\r\n                                                variant={\"outline-danger mb-2 mt-lg-3\"}\r\n                                                onClick={deleteCollection}\r\n                                            >{languages[lang].delete}\r\n                                            </Button>\r\n                                        ] : []\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {\r\n                                editMode ?\r\n                                    <Form.Control\r\n                                        onChange={formHandler}\r\n                                        as=\"textarea\" rows={5}\r\n                                        name={\"description\"}\r\n                                        value={values.description}\r\n                                    />\r\n                                    :\r\n                                    [\r\n                                        <strong key={1}>{languages[lang].descriptionB}: </strong>,\r\n                                        <ReactMarkdown key={2}>\r\n                                            {info.description || \"description is absent\"}\r\n                                        </ReactMarkdown>\r\n                                    ]\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ItemCreateModal\r\n                create={createItem}\r\n                fields={fields}\r\n                show={showModal}\r\n                hide={() => setShowModal(false)}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n            <ChangeFieldsModal\r\n            hide={() => setShowModal2(false)}\r\n            show={showModal2}\r\n            fields={fields}\r\n            error={error}\r\n            loading={loading}\r\n            edit={editFields}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Info","import React, {useEffect, useState} from \"react\"\r\nimport {useParams} from \"react-router\"\r\nimport Info from \"./Info\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ItemsContainer from \"./ItemsContainer\";\r\n\r\nfunction CollectionPage() {\r\n    const [info, setInfo] = useState({})\r\n\r\n    const [items, setItems] = useState(null)\r\n    const [fields, setFields] = useState([])\r\n    const id = useParams().id\r\n    const { loading, error, request } = useRequest()\r\n\r\n    async function loadCollection() {\r\n        const data = await request(\r\n            \"/api/collections/getCollection\",\r\n            \"POST\",\r\n            {\r\n                id: id\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            setInfo({\r\n                name: data.collection.name,\r\n                id: data.collection._id,\r\n                description: data.collection.description,\r\n                theme: data.collection.theme,\r\n                ownerId: data.collection.ownerId,\r\n                ownerName: data.collection.ownerName,\r\n                img_id: data.collection.img_id,\r\n                img_format: data.collection.img_format\r\n            })\r\n            setFields(data.collection.advancedFields)\r\n            const items = await request(\r\n                \"/api/collections/getItems\",\r\n                \"POST\",\r\n                {\r\n                    id: data.collection._id\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (items && items.ok) {\r\n                setItems(items.items)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async function edit(fields) {\r\n        if (fields.file) {\r\n            const formData = new FormData()\r\n            formData.append(\"file\", fields.file)\r\n            const data = await request(\r\n                \"/api/files/fileUpload\",\r\n                \"POST\",\r\n                formData\r\n            )\r\n            if (data && data.ok) {\r\n                fields.img_id = data.img_id\r\n                fields.img_format = data.img_format\r\n            }\r\n        }\r\n        const edit = await request(\r\n            \"/api/collections/editCollection\",\r\n            \"POST\",\r\n            {\r\n                edit: fields,\r\n                token: localStorage.getItem(\"token\"),\r\n                id,\r\n                ownerId: info.ownerId\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (edit && edit.ok) {\r\n            loadCollection().then()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCollection().then()\r\n    }, [])\r\n    return (\r\n        <Container fluid>\r\n            {\r\n                loading\r\n                ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row>\r\n                :\r\n                    <Col>\r\n                        <Info info={info} loadCollection={loadCollection} id={id} fields={fields} edit={edit} />\r\n                        <ItemsContainer items={items} size={2} />\r\n                    </Col>\r\n            }\r\n            <span>{error || \"\"}</span>\r\n        </Container>\r\n    )\r\n}\r\nexport default CollectionPage","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {StyledDropZone} from \"react-drop-zone\";\r\nimport Image from \"cloudinary-react/lib/components/Image\";\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport * as Icon from \"react-bootstrap-icons\"\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction Info({ info, loading2, edit }) {\r\n    const role = useSelector(state => state.role)\r\n    const userId = useSelector(state => state.userId)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const [likesCount, setLikesCount] = useState(0)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [dropText, setDropText] = useState(\"Click or drop your file here\")\r\n    const [values, setValues] = useState({ name: info.name, file: null})\r\n    const [dropColor, setDropColor] = useState(\"#888\")\r\n    const { request, loading } = useRequest()\r\n\r\n    useEffect(() => {\r\n        setValues({ name: info.name, file: null })\r\n        if (info.likes) {\r\n            setIsLiked(info.likes.includes(userId))\r\n            setLikesCount(info.likes.length)\r\n        }\r\n    }, [info, userId])\r\n\r\n    function onDrop(file) {\r\n        const name = file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\"\r\n        setValues({...values, file})\r\n        setDropText(\"Файл выбран (\" + name + \")\")\r\n        setDropColor(\"#74d239\")\r\n    }\r\n\r\n    async function setLike() {\r\n        if (loading) return\r\n        setIsLiked(!isLiked)\r\n        const data = await request (\r\n            \"/api/items/likeItem\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                id: info._id\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            setIsLiked(data.like)\r\n            setLikesCount(likesCount + (data.like ? 1 : -1))\r\n        }\r\n    }\r\n\r\n    async function deleteItem() {\r\n        const data = await request(\r\n            \"/api/items/deleteItem\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                id: info._id,\r\n                ownerId: info.ownerId,\r\n                parent: info.parent\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            window.location = \"/collection/\" + info.parent\r\n        }\r\n    }\r\n\r\n    function formHandler(e) {\r\n        setValues({...values, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    function tryEdit() {\r\n        const fields = { file: values.file }\r\n        if (values.name !== info.name) fields.name = values.name\r\n        edit(fields)\r\n    }\r\n\r\n    return (\r\n        <Container className={\"mt-4 py-3 bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Row>\r\n                <Col xl={4} lg={5} md={6} xs={12} className={\"text-center px-lg-2 px-0 text-lg-left\"}>\r\n                    {\r\n                        editMode ?\r\n                            <StyledDropZone\r\n                                onMouseEnter={() => {if (dropColor === \"#888\")setDropColor(\"#46b2ae\")}}\r\n                                onMouseLeave={() => {if (dropColor === \"#46b2ae\") setDropColor(\"#888\")}}\r\n                                children={dropText}\r\n                                style={{ borderColor: dropColor }}\r\n                                onDrop={onDrop}\r\n                            /> :\r\n                            <Image className={\"ml-lg-4\"} cloudName=\"itransit\" publicId={info.img_id} format={info.img_format}>\r\n                                <Transformation crop=\"fill\" gravity=\"faces\" width=\"300\" height=\"200\"/>\r\n                            </Image>\r\n                    }\r\n                </Col>\r\n                <Col className={\"text-center text-md-left px-lg-2 px-0 mr-3 mr-lg-0\"}>\r\n                    <Row>\r\n                        <Col lg={7} md={7} xs={12}>\r\n                            {\r\n                                editMode ?\r\n                                    <Form.Control onChange={formHandler} name={\"name\"} type=\"text\" value={values.name} />\r\n                                    :\r\n                                    <h2 className={\"fs-6\"}>{info.name}</h2>\r\n                            }\r\n                            <p><strong>{languages[lang].collections.collection}</strong>: <a href={\"/collection/\" + info.parent}>{info.parentName}</a></p>\r\n                            <Col>\r\n                                <Row className={\"justify-content-center\"}>\r\n                                    {\r\n                                        isLiked ?\r\n                                            <Icon.HeartFill\r\n                                                style={{\r\n                                                    fontSize: \"30px\",\r\n                                                    color: \"#c41e1e\",\r\n                                                    cursor: \"pointer\"\r\n                                                }}\r\n                                                onClick={setLike}\r\n                                            /> :\r\n                                            <Icon.Heart\r\n                                                style={{\r\n                                                    fontSize: \"30px\",\r\n                                                    color: \"#c41e1e\",\r\n                                                    cursor: \"pointer\"\r\n                                                }}\r\n                                                onClick={setLike}\r\n                                            />\r\n                                    }\r\n                                </Row>\r\n                                <Row className={\"justify-content-center\"}>\r\n                                    <span>{likesCount}</span>\r\n                                </Row>\r\n                            </Col>\r\n\r\n                        </Col>\r\n                        <Col style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\"\r\n                        }}>\r\n                            {\r\n                                role === \"Admin\" || userId === info.ownerId ?\r\n                                    editMode ?\r\n                                        [\r\n                                            <Button\r\n                                                variant={\"outline-success mb-2 mb-lg-3\"}\r\n                                                key={0}\r\n                                                disabled={loading2}\r\n                                                onClick={tryEdit}\r\n                                            >{languages[lang].save}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                variant={\"outline-danger my-0 mt-lg-3\"}\r\n                                                onClick={() => setEditMode(false)}\r\n                                                disabled={loading2}\r\n                                                key={1}\r\n                                            >{languages[lang].cancel}\r\n                                            </Button>\r\n                                        ] :\r\n                                        [\r\n                                            <Button\r\n                                                variant={\"outline-primary mb-2 mt-lg-3\"}\r\n                                                onClick={() => setEditMode(true)}\r\n                                                key={2}\r\n                                            >{languages[lang].editItem}\r\n                                            </Button>,\r\n                                            <Button\r\n                                                variant={\"outline-danger mb-2 mt-lg-3\"}\r\n                                                onClick={deleteItem}\r\n                                                key={3}\r\n                                            >{languages[lang].delete}\r\n                                            </Button>\r\n                                        ]\r\n                                        : []\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Info","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Row, Form} from \"react-bootstrap\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport * as Icon from \"react-bootstrap-icons\"\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction ItemFields({ item, loadItem }) {\r\n    const role = useSelector(state => state.role)\r\n    const userId = useSelector(state => state.userId)\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n    const [values, setValues] = useState(item.fields)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const { request } = useRequest()\r\n\r\n    function formHandler(e, i) {\r\n        let val = [...values]\r\n        val[i].value = e.target.type !== \"checkbox\" ? e.target.value : e.target.checked\r\n        setValues(val)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValues(item.fields)\r\n    }, [item])\r\n\r\n    async function editFields() {\r\n        const data = await request(\r\n            \"/api/items/editItemFields\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                ownerId: item.ownerId,\r\n                id: item._id,\r\n                edit: values\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            loadItem().then()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={\"mt-4 px-5 py-3 bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Row>\r\n                <Col xs={10}>\r\n                    <Row className={\"mb-3\"}>\r\n                        <h1>{languages[lang].itemInfo}: </h1>\r\n                    </Row>\r\n                    {\r\n                        values ? values.map((e, i) => {\r\n                            if (editMode) {\r\n                                if (e.type === \"text\") {\r\n                                    return (\r\n                                        <Row key={i}>\r\n                                            <span style={{fontSize: \"28px\"}} className={\"mb-0\"}><strong>{e.name}</strong>: </span>\r\n                                            <Form.Control\r\n                                                as={\"textarea\"}\r\n                                                key={i}\r\n                                                onChange={(e) => formHandler(e, i)}\r\n                                                value={e.value}\r\n                                            />\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return (\r\n                                        <Row key={i} className={\"mb-1\"}>\r\n                                            <span style={{fontSize: \"28px\"}}\r\n                                                  className={\"mb-0\"}><strong>{e.name}</strong>: </span>\r\n                                            <Form.Control\r\n                                                type={e.type}\r\n                                                onChange={(e) => formHandler(e, i)}\r\n                                                value={e.value}\r\n                                                checked={e.value}\r\n                                            />\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                            } else {\r\n                                return (\r\n                                    <Row className={\"mb-3\"} key={i}>\r\n                                        <div style={{ display: \"flex\", \"flexDirection\": \"row\", \"alignItems\": \"flex-end\" }}>\r\n                                            <span style={{fontSize: \"26px\"}} className={\"mb-0\"}><strong>{e.name}</strong>: </span>\r\n                                            <span\r\n                                                style={{fontSize: \"26px\"}}\r\n                                                className={\"ml-2 mb-0\"}\r\n                                            >{\r\n                                                e.type !== \"checkbox\" ? e.value ? e.value : \"empty\" :\r\n                                                    !e.value ? <Icon.X  style={{ color: \"#e22b2b\", fontSize: \"32px\" }}/>\r\n                                                    : <Icon.Check2  style={{ color: \"#42b32c\", fontSize: \"32px\" }}/>\r\n                                            }</span>\r\n                                        </div>\r\n                                    </Row>\r\n                                )\r\n                            }\r\n                        }) : []\r\n                    }\r\n                </Col>\r\n                <Col>\r\n                    {\r\n                        role === \"Admin\" || userId === item.ownerId ?\r\n                            !editMode ?\r\n                            <Button\r\n                                variant={\"outline-primary\"}\r\n                                onClick={() => setEditMode(true)}\r\n                                style={{ position: \"absolute\", top: \"5px\", right: \"0\" }}\r\n                            >{languages[lang].edit}</Button> :\r\n                            [\r\n                                <Button variant={\"outline-success\"} onClick={editFields} key={0}>{languages[lang].save}</Button>,\r\n                                <Button\r\n                                    variant={\"outline-danger\"}\r\n                                    key={1}\r\n                                    onClick={() => setEditMode(false)}\r\n                                >{languages[lang].cancel}</Button>\r\n                            ] : []\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ItemFields","import React from \"react\"\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nfunction Comment({ username, message, userId }) {\r\n    return (\r\n        <Col style={{ background: \"#ffffff\", boxShadow: \"0 0 5px rgba(0,0,0,0.3)\" }} className={\"px-5 py-2 my-3\"}>\r\n            <Row><a href={\"/collections/\" + userId}>{username}</a></Row>\r\n            <Row style={{ color: \"#676565\" }}>{message}</Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, {useEffect, useState} from \"react\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport {Container, Row, Form, Col, Button} from \"react-bootstrap\";\r\nimport Comment from \"./Comment\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nfunction Comments({ itemID }) {\r\n    const lang = useSelector(state => state.language)\r\n    const isAuth = useSelector(state => state.isAuthUser)\r\n    const theme = useSelector(state => state.theme)\r\n    const [comments, setComments] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const { request } = useRequest()\r\n\r\n    useEffect(() => {\r\n        if (itemID) loadComments(true).then()\r\n    }, [itemID])\r\n\r\n\r\n\r\n    async function loadComments(bool) {\r\n        const data = await request(\r\n            \"/api/items/getItem\",\r\n            \"POST\",\r\n            {\r\n                id: itemID\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            if (bool) {\r\n                const id = setTimeout(() => {}, 1)\r\n                for (let i = 0; i <= id; i++) clearInterval(i)\r\n                setInterval(loadComments, 3000)\r\n            }\r\n            setComments(data.item.comments)\r\n        }\r\n    }\r\n\r\n    async function send() {\r\n        const data = await request(\r\n            \"/api/items/createComment\",\r\n            \"POST\",\r\n            {\r\n                token: localStorage.getItem(\"token\"),\r\n                itemId: itemID,\r\n                message\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            setMessage(\"\")\r\n            loadComments().then()\r\n        }\r\n    }\r\n    return (\r\n        <Container className={\"mt-4 px-3 py-3 bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Row className={\"w-100 justify-content-center\"}>\r\n                <h1>{languages[lang].comments}: </h1>\r\n            </Row>\r\n            {\r\n                comments.length <= 0 ?\r\n                    <Row className={\"w-100 justify-content-center mt-3\"}>\r\n                        <span style={{ color: \"#777171\"}}>{languages[lang].commentsMessage}</span>\r\n                    </Row> :\r\n                    comments.map((e, i) => {\r\n                        return <Comment key={i} username={e.username} userId={e.userId} message={e.message} />\r\n                    })\r\n            }\r\n            {\r\n                isAuth ?\r\n                    <Container>\r\n                        <Row className={\"mt-5 justify-content-center\"}>\r\n                            <Col md={7} xs={9}>\r\n                                <Form.Control\r\n                                    as={\"textarea\"}\r\n                                    rows={3}\r\n                                    value={message}\r\n                                    onChange={(e) => setMessage(e.target.value)}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={1} className={\"justify-content-center mt-3\"}>\r\n                                <Button variant={\"primary\"} className={\"my-auto\"} onClick={send}>{languages[lang].send}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container> : []\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Comments","import React, {useEffect, useState} from \"react\"\r\nimport {useParams} from \"react-router\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Info from \"./Info\";\r\nimport ItemFields from \"./ItemFields\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction ItemPage() {\r\n    const id = useParams().id\r\n    const {loading, request, error} = useRequest()\r\n    const [item, setItem] = useState({})\r\n\r\n    async function loadItem() {\r\n        const data = await request(\r\n            \"/api/items/getItem\",\r\n            \"POST\",\r\n            {id},\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            setItem(data.item)\r\n        }\r\n    }\r\n\r\n    async function edit(fields) {\r\n        if (fields.file) {\r\n            const formData = new FormData()\r\n            formData.append(\"file\", fields.file)\r\n            const data = await request(\r\n                \"/api/files/fileUpload\",\r\n                \"POST\",\r\n                formData\r\n            )\r\n            if (data && data.ok) {\r\n                fields.img_id = data.img_id\r\n                fields.img_format = data.img_format\r\n                await request(\r\n                    \"/api/items/editItem\",\r\n                    \"POST\",\r\n                    {\r\n                        ownerId: item.ownerId,\r\n                        id: item._id,\r\n                        token: localStorage.getItem(\"token\"),\r\n                        edit: fields\r\n                    },\r\n                    {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                )\r\n                loadItem().then()\r\n            }\r\n        } else {\r\n            await request(\r\n                \"/api/items/editItem\",\r\n                \"POST\",\r\n                {\r\n                    ownerId: item.ownerId,\r\n                    id: item._id,\r\n                    token: localStorage.getItem(\"token\"),\r\n                    edit: fields\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            loadItem().then()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadItem().then()\r\n    }, [])\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <Row className=\"justify-content-md-center\">\r\n                <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60}/>\r\n            </Row>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Container>\r\n                <Info loading={loading} edit={edit} error={error} info={item} />\r\n                <ItemFields item={item} loadItem={loadItem} />\r\n                <Comments itemID={item._id}/>\r\n            </Container>\r\n        )\r\n\r\n    }\r\n}\r\nexport default ItemPage","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ItemsContainer from \"../CollectionPage/ItemsContainer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Autosuggest from 'react-autosuggest';\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\n\r\nfunction SearchPage() {\r\n    const paramText = useParams().text\r\n    const lang = useSelector(state => state.language)\r\n    const [text, setText] = useState(paramText ? paramText : \"\")\r\n    const [input, setInput] = useState(\"\")\r\n    const [tags, setTags] = useState([])\r\n    const [allTags, setAllTags] = useState([])\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [result, setResult] = useState([])\r\n    const { request, loading } = useRequest()\r\n\r\n    useEffect(() => {\r\n        if (text) findItems().then()\r\n        loadTags().then()\r\n    }, [])\r\n\r\n    function suggestionHandler(value) {\r\n        setInput(value)\r\n        if (!value) return\r\n        setSuggestions(allTags.filter(e => {\r\n            let bool = false\r\n            for (let i = 0; i <= e.name.length - value.length; i++) {\r\n                if (e.name.substr(i, value.length) === value) bool = true\r\n            }\r\n            return bool\r\n        }))\r\n    }\r\n\r\n    async function loadTags() {\r\n        const data = await request(\r\n            \"/api/items/getTags\"\r\n        )\r\n        if (data && data.ok) {\r\n            setAllTags(data.tags)\r\n        }\r\n    }\r\n\r\n    async function findItems() {\r\n        const data = await request (\r\n            \"/api/items/findItems\",\r\n            \"POST\",\r\n            {\r\n                text,\r\n                tags\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            console.log(data)\r\n            setResult(data.items)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Container>\r\n                <Form inline>\r\n                    <Row className={\"w-100 p-3 mt-3\"} style={{ boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n                        <Col xs={8} sm={9} md={10} xl={11}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={text}\r\n                                placeholder={languages[lang].header.search}\r\n                                className={\"w-100\"}\r\n                                onChange={(e) => setText(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4} sm={3} md={2} lg={1}>\r\n                            <Button variant=\"outline-info\" onClick={findItems}>{languages[lang].header.search}</Button>\r\n                        </Col>\r\n                        <Col xs={8} className={\"mt-3\"}>\r\n                            <TagsInput\r\n                                renderInput={({ addTag, ...props}) => AutocompleteRenderInput({ addTag, suggestions, ...props })}\r\n                                value={tags}\r\n                                inputProps={{ style: {width: \"100%\"} }}\r\n                                onChange={(tags) => setTags(tags)}\r\n                                onChangeInput={suggestionHandler}\r\n                                inputValue={input}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n            {\r\n                loading ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row> :\r\n                    <ItemsContainer items={result} size={2} />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction AutocompleteRenderInput({ addTag, suggestions, ...props }) {\r\n\r\n    return (\r\n        <Autosuggest\r\n            suggestions={suggestions}\r\n            shouldRenderSuggestions={(value) => value && value.trim().length > 0}\r\n            getSuggestionValue={(suggestion) => suggestion.name}\r\n            renderSuggestion={renderSuggestion}\r\n            onSuggestionSelected={(e, {suggestion}) => {\r\n                addTag(suggestion.name)\r\n            }}\r\n            inputProps={{ ...props, onChange: props.onChange }}\r\n            onSuggestionsClearRequested={() => {}}\r\n            onSuggestionsFetchRequested={() => {}}\r\n        />\r\n    )\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n        <div className={\"suggestion\"}>\r\n            {suggestion.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage","import './App.css';\r\nimport {Redirect, Route, BrowserRouter, Switch} from \"react-router-dom\";\r\nimport SignUpPage from './SignUpPage/SignUpPage'\r\nimport SignInPage from \"./SignInPage/SignInPage\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport AdminPage from \"./AdminPage/AdminPage\"\r\nimport Header from \"./shared/Header\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport auth from \"./shared/auth.js\";\r\nimport CollectionsPage from \"./CollectionsPage/CollectionsPage\";\r\nimport CollectionPage from \"./CollectionPage/CollectionPage\";\r\nimport ItemPage from \"./ItemPage/ItemPage\";\r\nimport SearchPage from \"./Search/SearchPage\";\r\n\r\n\r\nfunction App() {\r\n    const token = localStorage.getItem(\"token\")\r\n    const theme = useSelector(state => state.theme)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (token) auth(token, dispatch).then()\r\n        else {\r\n            dispatch({ type: \"SET_THEME\", payload: localStorage.getItem(\"theme\") || \"light\" })\r\n            dispatch({ type: \"SET_LANGUAGE\", payload: localStorage.getItem(\"language\") || \"rus\" })\r\n        }\r\n\r\n        document.body.setAttribute(\"class\", \"bg-\" + theme)\r\n    }, [token, dispatch, theme])\r\n\r\n    const logged = useSelector(state => state.isAuthUser)\r\n    const role = useSelector(state => state.role)\r\n\r\n    if (logged) {\r\n       return (\r\n               <BrowserRouter>\r\n                   <Header isLogged={logged} />\r\n                   <Switch>\r\n                       <Route path=\"/\" exact>\r\n                           <HomePage />\r\n                       </Route>\r\n                       <Route path=\"/collections/:ownerId\">\r\n                           <CollectionsPage />\r\n                       </Route>\r\n                       <Route path=\"/collection/:id\">\r\n                           <CollectionPage />\r\n                       </Route>\r\n                       <Route path={\"/search/:text?\"}>\r\n                           <SearchPage />\r\n                       </Route>\r\n                       <Route path=\"/item/:id\">\r\n                           <ItemPage />\r\n                       </Route>\r\n                       {\r\n                           role === \"Admin\"\r\n                               ?\r\n                               <Route path=\"/admin\">\r\n                                   <AdminPage />\r\n                               </Route>\r\n                               :\r\n                               []\r\n                       }\r\n                       <Redirect to=\"/\" />\r\n                   </Switch>\r\n               </BrowserRouter>\r\n       )\r\n    }\r\n    else {\r\n        return(\r\n                <BrowserRouter>\r\n                    <Header isLogged={logged} />\r\n                    <Switch>\r\n                        <Route path=\"/signUp\">\r\n                            <SignUpPage />\r\n                        </Route>\r\n                        <Route path=\"/item/:id\">\r\n                            <ItemPage />\r\n                        </Route>\r\n                        <Route path=\"/collections/:ownerId\">\r\n                            <CollectionsPage />\r\n                        </Route>\r\n                        <Route path={\"/search/:text?\"}>\r\n                            <SearchPage />\r\n                        </Route>\r\n                        <Route path=\"/collection/:id\">\r\n                            <CollectionPage />\r\n                        </Route>\r\n                        <Route path=\"/signIn\">\r\n                            <SignInPage />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                        <Redirect to=\"/signUp\" />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const defaultState = {\r\n    isAuthUser: false,\r\n    userId: null,\r\n    role: null,\r\n    theme: \"light\",\r\n    language: \"rus\",\r\n    selected: []\r\n}\r\n\r\nfunction reducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case \"AUTH_USER\":\r\n            state.isAuthUser = true\r\n            state.userId = action.payload.id\r\n            state.role = action.payload.role\r\n            return state\r\n        case \"LOGOUT_USER\":\r\n            state.isAuthUser = false\r\n            state.user = null\r\n            return state\r\n        case \"SELECT_USER\":\r\n            state.selected = [...state.selected, action.payload]\r\n            return state\r\n        case \"UNSELECT_USER\":\r\n            state.selected = state.selected.filter((e) => {\r\n                return e !== action.payload\r\n            })\r\n            return state\r\n        case \"SELECT_ALL\":\r\n            state.selected = action.payload\r\n            return state\r\n        case \"UNSELECT_ALL\":\r\n            state.selected = []\r\n            return state\r\n        case \"SET_THEME\":\r\n            state.theme = action.payload\r\n            return state\r\n        case \"SET_LANGUAGE\":\r\n            state.language = action.payload\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","import { createStore } from \"redux\"\r\nimport reducer from \"./reducer\"\r\n\r\nexport default createStore(reducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}
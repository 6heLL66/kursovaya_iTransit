[{"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\index.js":"1","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\App.js":"2","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\shared\\Header.js":"3","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\hooks\\useRequest.hook.js":"4","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\shared\\auth.js":"5","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\redux\\store.js":"6","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\redux\\reducer.js":"7","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\ControlPanel.js":"8","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CreateCollectionModal.js":"9","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CollectionsContainer.js":"10","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\Collection.js":"11","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\SignUpPage\\SignUpPage.js":"12","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\SignInPage\\SignInPage.js":"13","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\AdminPage.js":"14","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\HomePage.js":"15","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CollectionsPage.js":"16","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\ControlPanel.js":"17","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\UsersTable.js":"18","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\User.js":"19","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\CollectionPage.js":"20","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\Info.js":"21","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ItemCreateModal.js":"22","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ItemsContainer.js":"23","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\Item.js":"24","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\ItemPage.js":"25","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Info.js":"26","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\ItemFields.js":"27","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ChangeFieldsModal.js":"28","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Comments.js":"29","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Comment.js":"30","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\Search\\SearchPage.js":"31","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\LastItems.js":"32","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\BiggestCollections.js":"33","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\FilterView.js":"34","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\SortView.js":"35"},{"size":317,"mtime":1609784996776,"results":"36","hashOfConfig":"37"},{"size":3826,"mtime":1611226146272,"results":"38","hashOfConfig":"37"},{"size":8394,"mtime":1611591658248,"results":"39","hashOfConfig":"37"},{"size":1116,"mtime":1609766071482,"results":"40","hashOfConfig":"37"},{"size":1013,"mtime":1611163900135,"results":"41","hashOfConfig":"37"},{"size":107,"mtime":1609510693737,"results":"42","hashOfConfig":"37"},{"size":1298,"mtime":1610484545110,"results":"43","hashOfConfig":"37"},{"size":2695,"mtime":1611158979614,"results":"44","hashOfConfig":"37"},{"size":8770,"mtime":1611934323458,"results":"45","hashOfConfig":"37"},{"size":1425,"mtime":1611158495529,"results":"46","hashOfConfig":"37"},{"size":1792,"mtime":1611345599079,"results":"47","hashOfConfig":"37"},{"size":3557,"mtime":1611520263560,"results":"48","hashOfConfig":"37"},{"size":4170,"mtime":1611520320540,"results":"49","hashOfConfig":"37"},{"size":853,"mtime":1611586289074,"results":"50","hashOfConfig":"37"},{"size":352,"mtime":1611159377405,"results":"51","hashOfConfig":"37"},{"size":1692,"mtime":1611591373996,"results":"52","hashOfConfig":"37"},{"size":3048,"mtime":1610720686457,"results":"53","hashOfConfig":"37"},{"size":2505,"mtime":1611159716133,"results":"54","hashOfConfig":"37"},{"size":1669,"mtime":1610410486549,"results":"55","hashOfConfig":"37"},{"size":3558,"mtime":1611590159144,"results":"56","hashOfConfig":"37"},{"size":10915,"mtime":1611932440964,"results":"57","hashOfConfig":"37"},{"size":5395,"mtime":1611933915307,"results":"58","hashOfConfig":"37"},{"size":2276,"mtime":1611915424281,"results":"59","hashOfConfig":"37"},{"size":2455,"mtime":1611345900817,"results":"60","hashOfConfig":"37"},{"size":2862,"mtime":1610484113652,"results":"61","hashOfConfig":"37"},{"size":8916,"mtime":1611933006386,"results":"62","hashOfConfig":"37"},{"size":5989,"mtime":1611159156914,"results":"63","hashOfConfig":"37"},{"size":4656,"mtime":1610819367290,"results":"64","hashOfConfig":"37"},{"size":3572,"mtime":1611933210219,"results":"65","hashOfConfig":"37"},{"size":440,"mtime":1610297150301,"results":"66","hashOfConfig":"37"},{"size":4812,"mtime":1611155410931,"results":"67","hashOfConfig":"37"},{"size":1241,"mtime":1611591094270,"results":"68","hashOfConfig":"37"},{"size":1454,"mtime":1611591202538,"results":"69","hashOfConfig":"37"},{"size":9171,"mtime":1611934175278,"results":"70","hashOfConfig":"37"},{"size":4244,"mtime":1611590525966,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"13pbhkg",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\index.js",[],["149","150"],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\App.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\shared\\Header.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\hooks\\useRequest.hook.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\shared\\auth.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\redux\\store.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\redux\\reducer.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\ControlPanel.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CreateCollectionModal.js",["151"],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CollectionsContainer.js",["152"],"import React from \"react\"\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Collection from \"./Collection\";\r\nimport {useSelector} from \"react-redux\";\r\nconst language = require(\"../languages.json\")\r\n\r\nfunction CollectionsContainer({ collections }) {\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                flexDirection: \"row\"\r\n            }}\r\n            className={\"mt-4 py-3\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n                        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}\r\n            fluid\r\n        >\r\n            <Row className={\"w-100 mb-3 justify-content-center mx-auto\"}>\r\n                <h1>{language[lang].collections.collections}</h1>\r\n            </Row>\r\n            <Row className={\"w-100 mt-3 m-auto\"}>\r\n                {\r\n                    collections && collections.length > 0 ?\r\n                        collections.map((e,i) => {\r\n                            return <Collection collection={e} index={i} key={i} />\r\n                        }) :\r\n                        <h5 className={\"text-center w-100\"}>{language[lang].collections.emptyMessage}</h5>\r\n                }\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default CollectionsContainer\r\n","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\Collection.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\SignUpPage\\SignUpPage.js",["153"],"import React, {useState} from \"react\"\r\nimport {Button, Col, Container, Form, Nav, Row} from \"react-bootstrap\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\"\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\nexport default function SignUpPage() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const { loading, error, request, success } = useRequest()\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    async function sendData(e) {\r\n        e.preventDefault()\r\n        try {\r\n            await request(\r\n                \"/api/auth/register\",\r\n                \"POST\",\r\n                {\r\n                    email,\r\n                    username,\r\n                    password,\r\n                    role: \"User\",\r\n                    lang,\r\n                    theme\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (error === null) {\r\n                setEmail(\"\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch(e) {\r\n            throw e\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container className={\"mt-4 py-5\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Col lg={{ span: 6, offset: 3 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>{languages[lang].email}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>{languages[lang].username}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder={languages[lang].enterName}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>{languages[lang].password}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder={languages[lang].password}\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row style={{ color: error ? \"red\" : \"green\", marginLeft: 0 }}>\r\n                        <span>{error || success}</span>\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={sendData} disabled={loading}>\r\n                        {languages[lang].signUp}\r\n                    </Button>\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"/signIn\" style={{ padding: 0, marginTop: \"10px\" }}>{languages[lang].signIn}</Nav.Link>\r\n                    </Nav>\r\n                </Form>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\SignInPage\\SignInPage.js",["154","155"],"import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Form, Nav, Row} from \"react-bootstrap\"\r\nimport {useRequest} from \"../hooks/useRequest.hook\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport auth from \"../shared/auth\"\r\nconst languages = require(\"../languages.json\")\r\n\r\nexport default function SignInPage() {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const { loading, error, request } = useRequest()\r\n    const dispatch = useDispatch()\r\n    const lang = useSelector(state => state.language)\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    useEffect(() => {\r\n        window.VK.Widgets.Auth('vk_auth', {\r\n            onAuth: (user) => login(\"vk\", user)\r\n        })\r\n    }, [])\r\n\r\n    async function login(type, user) {\r\n        try {\r\n            const data = await request(\r\n                \"/api/auth/login\",\r\n                \"POST\",\r\n                {\r\n                    type,\r\n                    user,\r\n                    lang,\r\n                    theme\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            if (data.ok) {\r\n                localStorage.setItem(\"token\", data.token)\r\n                localStorage.setItem(\"userId\", data.user._id)\r\n                localStorage.setItem(\"type\", type)\r\n                await auth(data.token, dispatch)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    return (\r\n        <Container className={\"mt-4 py-5\" + \" bg-\" + (theme === \"dark\" ? \"semi-dark\" : \"white\")\r\n        + \" text-\" + (theme === \"dark\" ? \"white-50\" : \"dark\")}>\r\n            <Col lg={{ span: 6, offset: 3 }}>\r\n                <Form>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>{languages[lang].username}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder={languages[lang].enterName}\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>{languages[lang].password}</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder={languages[lang].password}\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row style={{ color: \"red\", marginLeft: 0 }}>\r\n                        <span>{error}</span>\r\n                    </Row>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        onClick={() => login(\"common\", { username, password })}\r\n                        disabled={loading}\r\n                    >{languages[lang].signIn}\r\n                    </Button>\r\n\r\n                    <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n                        <GoogleLogin\r\n                            clientId=\"808424836478-45hk3q9s4jbhlc9thn8sud56g7ff1u3m.apps.googleusercontent.com\"\r\n                            redirectUri={\"https://itransitkurs.herokuapp.com/\"}\r\n                            onSuccess={(res) => login(\"google\", res.profileObj)}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n                        <div id=\"vk_auth\"></div>\r\n                    </Row>\r\n\r\n\r\n                    <Nav>\r\n                        <Nav.Link href=\"/signUp\" style={{ padding: 0, marginTop: \"10px\" }}>{languages[lang].signUp}</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\AdminPage.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\HomePage.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionsPage\\CollectionsPage.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\ControlPanel.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\UsersTable.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\AdminPage\\User.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\CollectionPage.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\Info.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ItemCreateModal.js",["156"],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ItemsContainer.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\Item.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\ItemPage.js",["157"],"import React, {useEffect, useState} from \"react\"\r\nimport {useParams} from \"react-router\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport Info from \"./Info\";\r\nimport ItemFields from \"./ItemFields\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction ItemPage() {\r\n    const id = useParams().id\r\n    const {loading, request, error} = useRequest()\r\n    const [item, setItem] = useState({})\r\n\r\n    async function loadItem() {\r\n        const data = await request(\r\n            \"/api/items/getItem\",\r\n            \"POST\",\r\n            {id},\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            setItem(data.item)\r\n        }\r\n    }\r\n\r\n    async function edit(fields) {\r\n        if (fields.file) {\r\n            const formData = new FormData()\r\n            formData.append(\"file\", fields.file)\r\n            const data = await request(\r\n                \"/api/files/fileUpload\",\r\n                \"POST\",\r\n                formData\r\n            )\r\n            if (data && data.ok) {\r\n                fields.img_id = data.img_id\r\n                fields.img_format = data.img_format\r\n                await request(\r\n                    \"/api/items/editItem\",\r\n                    \"POST\",\r\n                    {\r\n                        ownerId: item.ownerId,\r\n                        id: item._id,\r\n                        token: localStorage.getItem(\"token\"),\r\n                        edit: fields\r\n                    },\r\n                    {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                )\r\n                loadItem().then()\r\n            }\r\n        } else {\r\n            await request(\r\n                \"/api/items/editItem\",\r\n                \"POST\",\r\n                {\r\n                    ownerId: item.ownerId,\r\n                    id: item._id,\r\n                    token: localStorage.getItem(\"token\"),\r\n                    edit: fields\r\n                },\r\n                {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            )\r\n            loadItem().then()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadItem().then()\r\n    }, [])\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <Row className=\"justify-content-md-center\">\r\n                <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60}/>\r\n            </Row>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Container>\r\n                <Info loading={loading} edit={edit} error={error} info={item} />\r\n                <ItemFields item={item} loadItem={loadItem} />\r\n                <Comments itemID={item._id}/>\r\n            </Container>\r\n        )\r\n\r\n    }\r\n}\r\nexport default ItemPage","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Info.js",["158"],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\ItemFields.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\ChangeFieldsModal.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Comments.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\ItemPage\\Comment.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\Search\\SearchPage.js",["159"],"import React, {useEffect, useState} from \"react\"\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router\";\r\nimport {useRequest} from \"../hooks/useRequest.hook\";\r\nimport ItemsContainer from \"../CollectionPage/ItemsContainer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Autosuggest from 'react-autosuggest';\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {useSelector} from \"react-redux\";\r\nconst languages = require(\"../languages.json\")\r\n\r\n\r\nfunction SearchPage() {\r\n    const paramText = useParams().text\r\n    const lang = useSelector(state => state.language)\r\n    const [text, setText] = useState(paramText ? paramText : \"\")\r\n    const [input, setInput] = useState(\"\")\r\n    const [tags, setTags] = useState([])\r\n    const [allTags, setAllTags] = useState([])\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [result, setResult] = useState([])\r\n    const { request, loading } = useRequest()\r\n\r\n    useEffect(() => {\r\n        if (text) findItems().then()\r\n        loadTags().then()\r\n    }, [])\r\n\r\n    function suggestionHandler(value) {\r\n        setInput(value)\r\n        if (!value) return\r\n        setSuggestions(allTags.filter(e => {\r\n            let bool = false\r\n            for (let i = 0; i <= e.name.length - value.length; i++) {\r\n                if (e.name.substr(i, value.length) === value) bool = true\r\n            }\r\n            return bool\r\n        }))\r\n    }\r\n\r\n    async function loadTags() {\r\n        const data = await request(\r\n            \"/api/items/getTags\"\r\n        )\r\n        if (data && data.ok) {\r\n            setAllTags(data.tags)\r\n        }\r\n    }\r\n\r\n    async function findItems() {\r\n        const data = await request (\r\n            \"/api/items/findItems\",\r\n            \"POST\",\r\n            {\r\n                text,\r\n                tags\r\n            },\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        )\r\n        if (data && data.ok) {\r\n            console.log(data)\r\n            setResult(data.items)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Container>\r\n                <Form inline>\r\n                    <Row className={\"w-100 p-3 mt-3\"} style={{ boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n                        <Col xs={8} sm={9} md={10} xl={11}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={text}\r\n                                placeholder={languages[lang].header.search}\r\n                                className={\"w-100\"}\r\n                                onChange={(e) => setText(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4} sm={3} md={2} lg={1}>\r\n                            <Button variant=\"outline-info\" onClick={findItems}>{languages[lang].header.search}</Button>\r\n                        </Col>\r\n                        <Col xs={8} className={\"mt-3\"}>\r\n                            <TagsInput\r\n                                renderInput={({ addTag, ...props}) => AutocompleteRenderInput({ addTag, suggestions, ...props })}\r\n                                value={tags}\r\n                                inputProps={{ style: {width: \"100%\"} }}\r\n                                onChange={(tags) => setTags(tags)}\r\n                                onChangeInput={suggestionHandler}\r\n                                inputValue={input}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n            {\r\n                loading ?\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n                    </Row> :\r\n                    <ItemsContainer items={result} size={2} />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction AutocompleteRenderInput({ addTag, suggestions, ...props }) {\r\n\r\n    return (\r\n        <Autosuggest\r\n            suggestions={suggestions}\r\n            shouldRenderSuggestions={(value) => value && value.trim().length > 0}\r\n            getSuggestionValue={(suggestion) => suggestion.name}\r\n            renderSuggestion={renderSuggestion}\r\n            onSuggestionSelected={(e, {suggestion}) => {\r\n                addTag(suggestion.name)\r\n            }}\r\n            inputProps={{ ...props, onChange: props.onChange }}\r\n            onSuggestionsClearRequested={() => {}}\r\n            onSuggestionsFetchRequested={() => {}}\r\n        />\r\n    )\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n        <div className={\"suggestion\"}>\r\n            {suggestion.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage","C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\LastItems.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\HomePage\\BiggestCollections.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\FilterView.js",[],"C:\\Users\\suzuya\\Desktop\\iTrasnsit\\kursovaya_iTransit\\client\\src\\CollectionPage\\SortView.js",["160"],"import React, {useEffect, useState} from \"react\"\r\nimport {Col, Form, Row} from \"react-bootstrap\"\r\nimport {useSelector} from \"react-redux\";\r\nconst language = require(\"../languages.json\")\r\n\r\nfunction SortView({ showedItems, setShowedItems, allItems }) {\r\n    const [fields, setFields] = useState(null)\r\n    const [sort, setSort] = useState({ value: \"no\" })\r\n    const [itemsCount, setItemsCount] = useState(0)\r\n    const lang = useSelector(state => state.language)\r\n\r\n    useEffect(() => {\r\n        if (showedItems && showedItems.length > 0) setFields([...showedItems[0].fields])\r\n    }, [showedItems])\r\n\r\n    useEffect(() => {\r\n        if (itemsCount !== showedItems.length) {\r\n            setSort({ value: \"no\", control: \"no\" })\r\n            setItemsCount(showedItems.length)\r\n        }\r\n    }, [itemsCount, showedItems])\r\n\r\n    useEffect(() => {\r\n        let items = [...showedItems]\r\n        if (!sort ) return\r\n        else if (sort.value === \"no\")  setShowedItems([...allItems])\r\n        else if (sort.index === undefined) {\r\n            items = items.sort((a, b) => {\r\n                if (sort.value === \"ml\") {\r\n                    return a.name <= b.name ? -1 : 1\r\n                } else if (sort.value === \"lm\") return a.name <= b.name ? 1 : -1\r\n                return 1\r\n            })\r\n        } else {\r\n            if (sort.type === \"number\") {\r\n                items = items.sort((a, b) => {\r\n                    if (sort.value === \"ml\") {\r\n                        return Number(a.fields[sort.index].value) <= Number(b.fields[sort.index].value) ? 1 : -1\r\n                    } else if (sort.value === \"lm\") {\r\n                        return Number(a.fields[sort.index].value) <= Number(b.fields[sort.index].value) ? -1 : 1\r\n                    }\r\n                    return 1\r\n                })\r\n            } else if (sort.type === \"date\") {\r\n                items = items.sort((a, b) => {\r\n                    if (sort.value === \"ml\") {\r\n                        return (new Date(a.fields[sort.index].value)).getTime()\r\n                                <= (new Date(b.fields[sort.index].value)).getTime() ? 1 : -1\r\n                    } else if (sort.value === \"lm\") {\r\n                        return (new Date(a.fields[sort.index].value)).getTime()\r\n                                <= (new Date(b.fields[sort.index].value)).getTime() ? -1 : 1\r\n                    }\r\n                    return 1\r\n                })\r\n            }\r\n        }\r\n        setShowedItems([...items])\r\n    }, [sort, allItems])\r\n\r\n    return (\r\n        <Row className={\"justify-content-end\"}>\r\n            <Col>\r\n                <Row>\r\n                    <Form.Text>Сортировка</Form.Text>\r\n                    <Form.Control value={sort.control} as={\"select\"} onChange={(e) => setSort({\r\n                        value: e.target.value.split(\" \")[0],\r\n                        index: e.target.value.split(\" \")[1],\r\n                        type: e.target.value.split(\" \")[2],\r\n                        control: e.target.value\r\n                    })}>\r\n                        <option value={\"no\"}>{language[lang].noSort}</option>\r\n                        <option value={\"ml\"}>{language[lang].nameAZ}</option>\r\n                        <option value={\"lm\"}>{language[lang].nameZA}</option>\r\n                        {\r\n                            fields && fields.map((e, i) => {\r\n                                if (e.type === \"number\" || e.type === \"date\"){ return [\r\n                                    <option\r\n                                        value={\"lm \" + String(i) + \" \" + e.type}\r\n                                        key={i}\r\n                                    >{`${e.name} ${language[lang].lessToMore}`}</option>,\r\n                                    <option\r\n                                        value={\"ml \" + String(i) + \" \" + e.type}\r\n                                        key={i + 1}\r\n                                    >{`${e.name} ${language[lang].moreToLess}`}</option>\r\n                                ]} else return null\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default SortView",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":33,"column":8,"nodeType":"167","endLine":33,"endColumn":24,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":18,"column":36,"nodeType":"171","messageId":"172","endLine":18,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":44,"column":43,"nodeType":"171","messageId":"172","endLine":44,"endColumn":44},{"ruleId":"165","severity":1,"message":"173","line":21,"column":8,"nodeType":"167","endLine":21,"endColumn":10,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"170","line":49,"column":43,"nodeType":"171","messageId":"172","endLine":49,"endColumn":44},{"ruleId":"165","severity":1,"message":"175","line":21,"column":8,"nodeType":"167","endLine":21,"endColumn":16,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":77,"column":8,"nodeType":"167","endLine":77,"endColumn":10,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":31,"column":8,"nodeType":"167","endLine":31,"endColumn":22,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":27,"column":8,"nodeType":"167","endLine":27,"endColumn":10,"suggestions":"182"},{"ruleId":"165","severity":1,"message":"183","line":58,"column":8,"nodeType":"167","endLine":58,"endColumn":24,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.","ArrayExpression",["187"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setItem(i => ...)' if you only need 'item' in the 'setItem' call.",["189"],"React Hook useEffect has a missing dependency: 'loadItem'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'isAuthUser'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'findItems', 'loadTags', and 'text'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'setShowedItems' and 'showedItems'. Either include them or remove the dependency array. If 'setShowedItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [advancedFields, form]",{"range":"208","text":"209"},"Update the dependencies array to be: [login]",{"range":"210","text":"211"},"Update the dependencies array to be: [fields, item]",{"range":"212","text":"213"},"Update the dependencies array to be: [loadItem]",{"range":"214","text":"215"},"Update the dependencies array to be: [info, isAuthUser, userId]",{"range":"216","text":"217"},"Update the dependencies array to be: [findItems, loadTags, text]",{"range":"218","text":"219"},"Update the dependencies array to be: [sort, allItems, showedItems, setShowedItems]",{"range":"220","text":"221"},[1266,1282],"[advancedFields, form]",[840,842],"[login]",[969,977],"[fields, item]",[2312,2314],"[loadItem]",[1464,1478],"[info, isAuthUser, userId]",[1068,1070],"[findItems, loadTags, text]",[2500,2516],"[sort, allItems, showedItems, setShowedItems]"]